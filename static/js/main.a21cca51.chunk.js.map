{"version":3,"sources":["CreateTaskForm.js","DeleteTask.js","EditTask.js","TaskCard.js","Column.js","App.js","serviceWorker.js","index.js"],"names":["CreateTaskForm","props","data","priorities","useState","isOpenCreateTaskForm","setIsOpenCreateTaskForm","isActiveButtonTaskCreate","setIsActiveButtonTaskCreate","taskInput","setTaskInput","taskPriority","setTaskPriority","taskReset","e","length","id","className","onClick","htmlFor","type","placeholder","value","onChange","target","parseInt","required","selected","disabled","preventDefault","newTask","uuidv4","name","priorityId","statusId","newData","forEach","status","tasks","push","taskCreate","deleteIcon","width","height","viewBox","class","fill","xmlns","d","fill-rule","DeleteTask","showDeleteModal","setShowDeleteModal","handleCloseModal","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","variant","deleteTask","task","plusIcon","fillRule","minusIcon","editIcon","EditTask","setName","setPriorityId","showEditModal","setShowEditModal","isActiveButtonTaskEdit","setIsActiveButtonTaskEdit","priorityString","find","el","priority","handleCloseEditModal","stylePlus","pointerEvents","cursor","opacity","styleDash","href","style","rows","updatedTask","updateTask","TaskCard","priorityBorderClasses","draggableId","toString","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","isDragging","draggableStyle","background","Column","droppableId","isDraggingOver","map","key","statuses","queue","initTasks","App","setData","updateData","deletedTask","obj","findIndex","idx","splice","onDragEnd","result","source","destination","removed","sort","a","b","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a21cca51.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {v4 as uuidv4} from \"uuid\";\n\nfunction CreateTaskForm (props) {\n\n    const data = props.data;\n    const priorities = props.priorities;\n    const [isOpenCreateTaskForm, setIsOpenCreateTaskForm] = useState(false);\n    const [isActiveButtonTaskCreate, setIsActiveButtonTaskCreate] = useState(false);\n    const [taskInput, setTaskInput] = useState('');\n    const [taskPriority, setTaskPriority] = useState(3);\n\n    const onTaskChange = (e) => {\n        setIsActiveButtonTaskCreate(e.target.value.length > 2);\n        setTaskInput(e.target.value);\n    }\n\n    const taskCreate = (e) => {\n        e.preventDefault();\n        const newTask = {\n            id: uuidv4(),\n            name: taskInput,\n            priorityId: taskPriority,\n            statusId: 1\n        };\n        const newData = [...data];\n        newData.forEach(status => {\n            if(newTask.statusId === status.id){\n                status.tasks.push(newTask);\n            }\n        })\n        props.taskCreate(newData);\n        taskReset();\n    }\n\n    const taskReset = (e) => {\n        setTaskInput('');\n        setTaskPriority(priorities[priorities.length - 1].id);\n        setIsOpenCreateTaskForm(false);\n        setIsActiveButtonTaskCreate(false);\n    }\n\n    return (\n        <>\n            {\n                !isOpenCreateTaskForm &&\n                <button className=\"btn btn-primary\" onClick={e => setIsOpenCreateTaskForm(true)}>Add task</button>\n            }\n            {\n                isOpenCreateTaskForm &&\n                <form>\n                     <div className=\"form-row\">\n                    <div className=\"col-md-6 mb-3\">\n                        <label htmlFor=\"exampleInputEmail1\">Task</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Describe Your Task\"\n                               value={taskInput} onChange={onTaskChange}/>\n                    </div>\n\n                    <div className=\"col-md-2 mb-3\">\n                        <label htmlFor=\"taskPriority\">Priority</label>\n                        <select className=\"form-control\"\n                                id=\"taskPriority\"\n                                onChange={e => setTaskPriority(parseInt(e.target.value))}\n                                required>\n                            <option selected disabled value=\"\">Select</option>\n                            <option value=\"1\">High </option>\n                            <option value=\"2\">Medium</option>\n                            <option value=\"3\">Low</option>\n                        </select>\n                        </div>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary m-1\"\n                            onClick={taskCreate}\n                            disabled={!isActiveButtonTaskCreate}\n                    >Submit</button>\n                    <button className=\"btn btn-secondary\" onClick={taskReset}>Cancel</button>\n                </form>\n            }\n        </>\n    );\n};\n\nexport default CreateTaskForm;","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst deleteIcon = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n<path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>)\n\nfunction DeleteTask(props) {\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n    const handleShowModal = () => {\n        setShowDeleteModal(true);\n    };\n\n    const handleCloseModal = () => {\n        setShowDeleteModal(false);\n    };\n\n    const deleteTask = () => {\n        props.deleteTask(props.task);\n        setShowDeleteModal(false);\n    };\n\n    return (\n        <>\n            <button type=\"button\"\n                    className=\"btn btn-sm float-right\"\n                    onClick={handleShowModal}>\n                {deleteIcon}\n            </button>\n\n            <Modal show={showDeleteModal} onHide={handleCloseModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you want to delete this task?</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={deleteTask}>\n                        Delete\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default DeleteTask;","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst plusIcon = (\n    <svg className=\"bi bi-caret-up\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M3.204 11L8 5.519 12.796 11H3.204zm-.753-.659l4.796-5.48a1 1 0 0 1 1.506 0l4.796 5.48c.566.647.106 1.659-.753 1.659H3.204a1 1 0 0 1-.753-1.659z\"/>\n    </svg>\n);\nconst minusIcon = (\n    <svg className=\"bi bi-caret-down\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" d=\"M3.204 5L8 10.481 12.796 5H3.204zm-.753.659l4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\"/>\n    </svg>\n);\n\nconst editIcon = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fill-rule=\"evenodd\" d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\n  <path fill-rule=\"evenodd\" d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\n</svg>);\n\nfunction EditTask(props) {\n    const task = props.task;\n    const [name, setName] = useState(task.name);\n    let [priorityId, setPriorityId] = useState(task.priorityId);\n    const [showEditModal, setShowEditModal] = useState(false);\n    const [isActiveButtonTaskEdit, setIsActiveButtonTaskEdit] = useState(task.name.length > 4);\n    const priorityString = props.priorities.find(el => el.id === priorityId).priority;\n\n    const handleShowEditModal = () => {\n        setShowEditModal(true);\n    }\n\n    const handleCloseEditModal = () => {\n        setName(task.name);\n        setPriorityId(task.priorityId);\n        setIsActiveButtonTaskEdit(task.name.length > 3);\n        setShowEditModal(false);\n    }\n\n    const onTaskChange = (e) => {\n        setIsActiveButtonTaskEdit(e.target.value.length > 3);\n        setName(e.target.value);\n    }\n\n    const increasePriority = (e) => {\n        e.preventDefault();\n        setPriorityId(--priorityId);\n    }\n\n    const decreasePriority = (e) => {\n        e.preventDefault();\n        setPriorityId(++priorityId);\n    }\n\n    const editTask = () => {\n        const updatedTask = {...task, name: name, priorityId: priorityId};\n        props.updateTask(updatedTask);\n        setShowEditModal(false);\n    }\n\n    const stylePlus = {\n        pointerEvents: priorityId > 1 ? '' : 'none',\n        cursor: priorityId > 1 ? '' : 'not-allowed',\n        opacity: priorityId > 1 ? 1 : 0.2\n    }\n    const styleDash = {\n        pointerEvents: priorityId < 3 ? '' : 'none',\n        cursor: priorityId < 3 ? '' : 'not-allowed',\n        opacity: priorityId < 3 ? 1 : 0.2\n    }\n\n    return (\n        <div>\n            <button type=\"button\"\n                    className=\"btn btn-sm float-right\" onClick={handleShowEditModal}>{editIcon}                    </button>\n            <Modal show={showEditModal} onHide={handleCloseEditModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"d-flex ml-auto\">\n                        <div className=\"card-text p-2\">\n                            <a className=\"ml-1\" href=\"#\"  onClick={decreasePriority} style={styleDash}>{minusIcon}</a>\n                            {priorityString === 'High Priority' &&\n                            <span className=\"badge badge-danger\">{priorityString}</span>\n                            }\n                            {priorityString === 'Medium Priority' &&\n                            <span className=\"badge badge-warning\">{priorityString}</span>\n                            }\n                            {priorityString === 'Low Priority' &&\n                            <span className=\"badge badge-success\">{priorityString}</span>\n                            }\n                            <a className=\"ml-1\" href=\"#\" onClick={increasePriority} style={stylePlus}>{plusIcon}</a>\n                        </div>\n                    </div>\n                    <div className=\"d-flex pt-1\">\n                        <div className=\"input-group\">\n                                <textarea className=\"md-textarea form-control\"\n                                          rows=\"3\"\n                                          value={name}\n                                          onChange={onTaskChange}\n                                          placeholder=\"Describe your task\"\n                                />\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseEditModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={editTask} disabled={!isActiveButtonTaskEdit}>\n                        Update\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\nexport default EditTask;\n","import React from 'react';\nimport DeleteTask from \"./DeleteTask\";\nimport EditTask from \"./EditTask\";\nimport {Draggable} from 'react-beautiful-dnd';\nimport Task from \"./Task.css\"\n\nfunction TaskCard(props) {\n\n    const priorityString = props.priorities.find(el => el.id === props.task.priorityId).priority;\n    let priorityBorderClasses ='border-left';\n    if (priorityString === 'High Priority' ) {\n        priorityBorderClasses += ' border-danger';\n    } else if (priorityString === 'Medium Priority') {\n        priorityBorderClasses += ' border-warning';\n    } else\n        priorityBorderClasses += ' border-success';\n\n\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        // change background colour if dragging\n        background: isDragging ? \"lightgrey\" : \"\",\n        // styles we need to apply on draggables\n        ...draggableStyle\n    });\n    \n    return (\n        <Draggable draggableId={props.task.id.toString()} index={props.index}>\n            {\n                (provided, snapshot)  => (\n        <div className=\"card shadow bg-white rounded mb-2\"\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            style={getItemStyle(\n                snapshot.isDragging,\n                provided.draggableProps.style\n            )}\n        >\n            <div className={priorityBorderClasses}>\n                <div className=\"card-body\">\n                    <span className=\"card-text\">\n                                    {priorityString === 'High Priority' &&\n                                        <span className=\"badge badge-danger\">{priorityString}</span>\n                                    }\n                                    {priorityString === 'Medium Priority' &&\n                                        <span className=\"badge badge-warning\">{priorityString}</span>\n                                    }\n                                    {priorityString === 'Low Priority' &&\n                                        <span className=\"badge badge-success\">{priorityString}</span>\n                                    }\n              \n                    <div className=\"card-header\">{props.task.name}</div>\n                                </span>\n                    <EditTask task={props.task}\n                                priorities={props.priorities}\n                                updateTask={props.updateTask}\n                            />\n\n                    <DeleteTask task={props.task}\n                                deleteTask={props.deleteTask}\n                            />\n                </div>\n            </div>\n        </div>\n        )}\n        </Draggable>\n    );\n}\n\nexport default TaskCard;\n","import React from 'react';\nimport TaskCard from \"./TaskCard\";\nimport { Droppable } from 'react-beautiful-dnd';\n\nfunction Column(props) {\n    const status = props.status;\n\n    const getStatusStyle = (isDraggingOver) => ({\n        background: isDraggingOver ? \"#00BFFF\" : '',\n    });\n\n    return (\n        <Droppable droppableId={props.status.id.toString()}>\n            {(provided, snapshot) => (\n                <div className=\"col-sm-3 p-1\"\n                     ref={provided.innerRef}\n                     style={getStatusStyle(snapshot.isDraggingOver)}\n                >\n                <h5 className=\"card-header text-center\">{status.name} {status.tasks.length > 0 ? status.tasks.length : ''}</h5>\n                {\n                    status.tasks\n                        // .sort((a, b) => { return a.priorityId - b.priorityId} )\n                        .map((task, index) => {\n                            if(task.statusId === status.id)\n                                return (\n                                    <TaskCard key={task.id}\n                                               index={index}\n                                               priorities={props.priorities}\n                                               task={task}\n                                               updateTask={props.updateTask}\n                                               deleteTask={props.deleteTask}\n                                               />\n                                    );\n                            })\n                    }\n                    {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        );\n    };\n    \n    export default Column;","import React, {useState} from 'react';\nimport CreateTaskForm from \"./CreateTaskForm\";\nimport Column from \"./Column\";\nimport {v4 as uuidv4} from 'uuid';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nconst statuses = [\n    {id: 1, tasks: [], queue: 1, name: 'To Do'},\n    {id: 2, tasks: [], queue: 2, name: 'In Progress'},\n    {id: 3, tasks: [], queue: 3, name: 'Review'},\n    {id: 4, tasks: [], queue: 4, name: 'Done'}\n]\n\nconst priorities = [\n    {id: 1, priority: 'High Priority'},\n    {id: 2, priority: 'Medium Priority'},\n    {id: 3, priority: 'Low Priority'}\n]\n\nconst initTasks = [\n    {id: uuidv4(), name: 'Stretching', priorityId: 3, statusId: 1},\n    {id: uuidv4(), name: 'Meditation', priorityId: 3, statusId: 2},\n    {id: uuidv4(), name: 'Drink wather', priorityId: 3, statusId: 4},\n    {id: uuidv4(), name: 'Listen favorite song', priorityId: 3, statusId: 4},\n    {id: uuidv4(), name: 'Magic methods Sequlized', priorityId: 2, statusId: 2},\n    {id: uuidv4(), name: 'Workshop OAuth', priorityId: 1, statusId: 4},\n    {id: uuidv4(), name: 'Algoritms', priorityId: 2, statusId: 2},\n    {id: uuidv4(), name: 'Checkpoint Redux', priorityId: 1, statusId: 3},\n    {id: uuidv4(), name: 'React Hooks', priorityId: 2, statusId: 3}, \n    {id: uuidv4(), name: 'YOU CAN DO IT!!!', priorityId: 1, statusId: 1}\n];\n\n\nstatuses.map(status =>\n    initTasks.map(task => {\n        if(task.statusId === status.id){\n            status.tasks.push(task);\n        }\n    })\n);\n\nfunction App() {\n    const [data, setData] = useState(statuses);\n\n    const taskCreate = (newData) => {\n        setData(newData);\n    }\n\n    const updateTask = (updatedTask) => {\n        const updateData = [...data];\n        updateData.forEach(status => {\n            status.tasks.map(task => {\n                if(task.id === updatedTask.id){\n                    task.name = updatedTask.name;\n                    task.priorityId = updatedTask.priorityId;\n                    task.statusId = updatedTask.statusId;\n                }\n            })\n        });\n        setData(updateData);\n    }\n\n    const deleteTask = (deletedTask) => {\n        const updateData = [...data];\n        updateData.forEach(obj => {\n            const index = obj.tasks.findIndex(idx => idx.id === deletedTask.id);\n            if (index !== -1) {\n                obj.tasks.splice(index, 1);\n            }\n        });\n        setData(updateData);\n    }\n\n    const onDragEnd = (result) => {\n        const {source, destination} = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const [removed] = data[source.droppableId - 1].tasks.splice(source.index, 1);\n            data[source.droppableId - 1].tasks.splice(destination.index, 0, removed);\n        } else {\n            const [removed] = data[source.droppableId - 1].tasks.splice(source.index, 1);\n            data[destination.droppableId - 1].tasks.splice(destination.index, 0, removed);\n            data.map((el, idx) =>\n                el.tasks.map(task =>\n                    task.id === removed.id ? task.statusId = idx + 1 : ''\n                )\n            );\n        }\n        setData(data);\n    }\n\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h2>DEALDONE</h2>\n                <CreateTaskForm data={data}\n                                priorities={priorities}\n                                taskCreate={taskCreate}\n                />\n                <div className=\"row\">\n                <DragDropContext onDragEnd={onDragEnd}>\n                    {\n                        data\n                            .sort((a, b) => { return a.queue - b.queue} )\n                            .map(el =>\n                                <Column key={el.id}\n                                              status={el}\n                                              statuses={statuses}\n                                              priorities={priorities}\n                                              updateTask={updateTask}\n                                              deleteTask={deleteTask}\n                                />\n                            )\n                    }\n                </DragDropContext>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}